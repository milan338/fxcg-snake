import sys
import json
from tkinter import filedialog
from os import makedirs
from os.path import abspath, join

# Instrunctions
# Windows: https://github.com/Jonimoose/libfxcg/blob/master/docs/howto-windows.md

# ------------------------------------------------------------------------------
GEN_VSCODE_C_CPP_PROPERTIES = True
# ------------------------------------------------------------------------------
GEN_FX_CG_CL = False
# https://gitlab.com/taricorp/fx-cg-cl/ # https://gitlab.com/taricorp/fx-cg-ui #
# ------------------------------------------------------------------------------


def getDir(title):
    dir_name = filedialog.askdirectory(initialdir='.',
                                       title=title)
    return dir_name


sdk_path = getDir(title='Select PrizmSDK Directory')

if not sdk_path:
    sys.exit('Stopped setup')

base_path = abspath('.')

sdk_out_path = abspath(join(base_path, 'PATH.txt'))
with open(sdk_out_path, 'w') as file:
    file.write(abspath(sdk_path))

if GEN_FX_CG_CL:
    cl_path = getDir(title='Select FX-CG-CL Directory')
    if not cl_path:
        sys.exit('Stopped setup')
    cl_out_path = abspath(join(base_path, 'CLPATH.txt'))
    with open(cl_out_path, 'w') as file:
        file.write(abspath(cl_path))

if GEN_VSCODE_C_CPP_PROPERTIES:
    vscode_path = abspath(join(base_path, '.vscode'))
    c_cpp_properties_path = abspath(join(vscode_path, 'c_cpp_properties.json'))
    compiler_path = abspath(join(sdk_path, 'bin', 'sh3eb-elf-gcc.exe'))
    include_path = abspath(join(sdk_path, '**'))
    try:
        makedirs(vscode_path)
    except:
        pass
    c_cpp_properties = {
        'configurations': [{
            'name': 'libfxcg',
            'includePath': [
                include_path],
            'browse': {
                'limitSymbolsToIncludedHeaders': True,
                'path': [
                    include_path]},
            'cStandard': 'c11',
            'cppStandard': 'c++11',
            'compilerPath': compiler_path,
            'compilerArgs': [
                '-MMD',
                '-MP',
                '-MF',
                '-ffunction-sections',
                '-fdata-sections'
            ]}],
        'version': 4}
    with open(c_cpp_properties_path, 'w') as file:
        file.write('// AUTOGENERATED FILE BY SETUP.PY\n'
                   '// ANY CHANGES MADE WILL BE LOST ON NEXT SETUP\n')
        file.write(json.dumps(c_cpp_properties, indent=4))
